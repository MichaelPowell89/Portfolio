{"version":3,"file":"static/js/928.494e63b3.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","components/ContactForm.jsx","views/Contact.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.6.2');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, { useState, useRef } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport copyConsts from \"../copyConsts.json\"\r\n\r\nfunction ContactForm() {\r\n  const form = useRef();\r\n  const [contactForm, setContactForm] = useState(false);\r\n\r\n  const [contact, setContact] = useState({\r\n    user_name: \"\",\r\n    user_email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const handleSubmit = (value) => {\r\n\r\n    emailjs\r\n      .sendForm(\r\n        \"service_4biylnj\",\r\n        \"template_2k3p4f6\",\r\n        form.current,\r\n        \"Bh-qOe5zllkY8rBt6\"\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(\"SUCCESS!\", response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log(\"FAILED...\", error);\r\n        }\r\n      );\r\n\r\n    setContactForm(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setContact((prevValue) => {\r\n      return {\r\n        ...prevValue,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"ContentPage\" style={{\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      width: \"90vw\"}}>\r\n      {contactForm ? (\r\n        <Container>\r\n            <div className=\"ContactContainer\">\r\n                <h1 className=\"contactTitle\">{copyConsts.emailResponse}</h1>\r\n            </div>\r\n        </Container>\r\n      ) : (\r\n        <>\r\n        <h1 className=\"contactTitle\">{copyConsts.CTA}</h1>\r\n        <Container className=\"contactContainer\">\r\n          <div className=\"ContactContainer\">\r\n            <col-6>\r\n              <Row>\r\n                <td>\r\n                  <Row className=\"contactRow\">\r\n                    <p className=\"informationTitle\">\r\n                      <img\r\n                        className=\"contactIcon\"\r\n                        src=\"./images/contactLocation.png\"\r\n                        alt=\"\"\r\n                      />\r\n                      {copyConsts.addressTitle}\r\n                    </p>\r\n                  </Row>\r\n                  <Row>\r\n                    <p className=\"informationText\">{copyConsts.addressLocation}</p>\r\n                  </Row>\r\n                </td>\r\n              </Row>\r\n              <Row>\r\n                <td>\r\n                  <Row className=\"contactRow\">\r\n                    <p className=\"informationTitle\">\r\n                      <img\r\n                        className=\"contactIcon\"\r\n                        src=\"./images/contactPhone.png\"\r\n                        alt=\"\"\r\n                      />\r\n                      {copyConsts.phoneTitle}\r\n                    </p>\r\n                  </Row>\r\n                  <Row>\r\n                    <p className=\"informationText\">{copyConsts.phoneNumber}</p>\r\n                  </Row>\r\n                </td>\r\n              </Row>\r\n              <Row>\r\n                <td>\r\n                  <Row className=\"contactRow\">\r\n                    <p className=\"informationTitle\">\r\n                      <img\r\n                        className=\"contactIcon\"\r\n                        src=\"./images/contactEmail.png\"\r\n                        alt=\"\"\r\n                      />\r\n                      {copyConsts.myEmailTitle}\r\n                    </p>\r\n                  </Row>\r\n                  <Row>\r\n                    <p className=\"informationText\">\r\n                      {copyConsts.myEmailAddress}\r\n                    </p>                    \r\n                    <p className=\"informationText\">\r\n                      {copyConsts.myEmailHost}\r\n                    </p>\r\n                  </Row>\r\n                </td>\r\n              </Row>\r\n              <Row>\r\n                <td>\r\n                  <Row className=\"contactRow\">\r\n                    <p className=\"informationTitle\">\r\n                      <img\r\n                        className=\"contactIcon\"\r\n                        src=\"./images/linkedinOutline.png\"\r\n                        style={{ paddingBottom: \"15px\" }}\r\n                        alt=\"\"\r\n                      />\r\n                      {copyConsts.LinkedInTitle}\r\n                    </p>\r\n                  </Row>\r\n                  <Row>\r\n                    <a href=\"https://www.linkedin.com/in/michael-powell-38870333\">\r\n                      <p className=\"informationText\">\r\n                        {copyConsts.LinkedInURL}\r\n                      </p>\r\n                    </a>\r\n                  </Row>\r\n                </td>\r\n              </Row>\r\n            </col-6>\r\n            <div className=\"ContactForm\">\r\n              <form id=\"form\" ref={form} onSubmit={handleSubmit}>\r\n                <label className=\"inputTitle\" for=\"name\">\r\n                  {copyConsts.nameTitle}\r\n                </label>\r\n                <input\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  name=\"user_name\"\r\n                  className=\"feedback-input\"\r\n                  placeholder=\"Name\"\r\n                  value={contact.user_name}\r\n                />\r\n\r\n                <label className=\"inputTitle\" for=\"email\">\r\n                  {copyConsts.emailTitle}\r\n                </label>\r\n                <input\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  name=\"user_email\"\r\n                  className=\"feedback-input\"\r\n                  placeholder=\"Email\"\r\n                  value={contact.user_email}\r\n                />\r\n\r\n                <label className=\"inputTitle\" for=\"subject\">\r\n                  {copyConsts.subjectTitle}\r\n                </label>\r\n                <input\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  name=\"subject\"\r\n                  className=\"feedback-input\"\r\n                  placeholder=\"Subject\"\r\n                  value={contact.subject}\r\n                />\r\n\r\n                <label className=\"inputTitle\" for=\"message\">\r\n                  {copyConsts.messageTitle}\r\n                </label>\r\n                <textarea\r\n                  onChange={handleChange}\r\n                  name=\"message\"\r\n                  className=\"feedback-input\"\r\n                  placeholder=\"Lets chat\"\r\n                  value={contact.message}\r\n                />\r\n\r\n                <button\r\n                  className=\"submitButton\"\r\n                  disabled={\r\n                    !contact.user_name ||\r\n                    !contact.user_email ||\r\n                    !contact.subject ||\r\n                    !contact.message\r\n                  }\r\n                  type=\"submit\"\r\n                  value=\"Send\"\r\n                >\r\n                  {copyConsts.sendButton}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport ContactForm from '../components/ContactForm.jsx'\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <>\r\n            <ContactForm />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","useRef","useState","contactForm","setContactForm","user_name","user_email","subject","message","contact","setContact","handleChange","event","name","value","prevValue","Container","className","style","display","flexDirection","justifyContent","width","copyConsts","Row","src","alt","paddingBottom","href","id","ref","onSubmit","emailjs","current","then","response","console","log","error","for","onChange","type","placeholder","disabled","React","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"sourceRoot":""}